{
  "id": "feec0feaa6e6bafd04b143329900af3d",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.20",
  "solcLongVersion": "0.8.20+commit.a1b79de6",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/Contract.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract CarbonCertificate {\n    // Struct to represent a carbon certificate\n    struct Certificate {\n        uint256 carbonAmount; // Amount of carbon in tons\n        string projectId;     // Project identifier\n        uint256 issueDate;    // Timestamp of issuance\n    }\n\n    // Mapping from tokenId to certificate data\n    mapping(uint256 => Certificate) private _certificates;\n\n    // Mapping from owner to list of owned token IDs\n    mapping(address => uint256[]) private _ownedTokens;\n\n    // Mapping to check if a token exists\n    mapping(uint256 => bool) private _exists;\n\n    // Variable for tracking the token IDs\n    uint256 private _tokenIds;\n\n    // Event emitted when a certificate is issued\n    event CertificateIssued(\n        uint256 indexed tokenId,\n        address indexed recipient,\n        uint256 carbonAmount,\n        string projectId\n    );\n\n    // Constructor to initialize the contract\n    constructor() {}\n\n    /**\n     * @notice Issues a carbon certificate (one per token)\n     * @param recipient Address of the certificate recipient\n     * @param carbonAmount The number of tons of carbon to issue\n     * @param projectId The project identifier\n     * @return Array of new token IDs\n     */\n    function issueCertificate(\n        address recipient,\n        uint256 carbonAmount,\n        string memory projectId\n    ) external returns (uint256[] memory) {\n        require(carbonAmount > 0, \"Carbon amount must be greater than zero\");\n\n        uint256[] memory newTokenIds = new uint256[](carbonAmount);\n\n        for (uint256 i = 0; i < carbonAmount; i++) {\n            _tokenIds++;\n            uint256 newTokenId = _tokenIds;\n\n            // Store the certificate details\n            _certificates[newTokenId] = Certificate({\n                carbonAmount: 1, // 1 token = 1 ton of carbon\n                projectId: projectId,\n                issueDate: block.timestamp\n            });\n\n            // Track the token ownership\n            _ownedTokens[recipient].push(newTokenId);\n            _exists[newTokenId] = true;\n\n            newTokenIds[i] = newTokenId;\n\n            // Emit the certificate issued event\n            emit CertificateIssued(newTokenId, recipient, 1, projectId);\n        }\n\n        return newTokenIds;\n    }\n\n    /**\n     * @notice Fetches the certificate data associated with a given tokenId\n     * @param tokenId The ID of the token to query\n     * @return The certificate data for the token\n     */\n    function getCertificate(uint256 tokenId) external view returns (Certificate memory) {\n        require(_exists[tokenId], \"Token does not exist\");\n        return _certificates[tokenId];\n    }\n\n    /**\n     * @notice Gets the list of token IDs owned by a given address\n     * @param owner The address to query\n     * @return An array of token IDs owned by the address\n     */\n    function getOwnedTokens(address owner) external view returns (uint256[] memory) {\n        return _ownedTokens[owner];\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 500
      },
      "viaIR": true,
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "contracts/Contract.sol": {
        "ast": {
          "absolutePath": "contracts/Contract.sol",
          "exportedSymbols": {
            "CarbonCertificate": [
              164
            ]
          },
          "id": 165,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "CarbonCertificate",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 164,
              "linearizedBaseContracts": [
                164
              ],
              "name": "CarbonCertificate",
              "nameLocation": "66:17:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "CarbonCertificate.Certificate",
                  "id": 8,
                  "members": [
                    {
                      "constant": false,
                      "id": 3,
                      "mutability": "mutable",
                      "name": "carbonAmount",
                      "nameLocation": "175:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 8,
                      "src": "167:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "167:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 5,
                      "mutability": "mutable",
                      "name": "projectId",
                      "nameLocation": "232:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 8,
                      "src": "225:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 4,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "225:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 7,
                      "mutability": "mutable",
                      "name": "issueDate",
                      "nameLocation": "285:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 8,
                      "src": "277:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "277:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Certificate",
                  "nameLocation": "145:11:0",
                  "nodeType": "StructDefinition",
                  "scope": 164,
                  "src": "138:191:0",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 13,
                  "mutability": "mutable",
                  "name": "_certificates",
                  "nameLocation": "423:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "383:53:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$8_storage_$",
                    "typeString": "mapping(uint256 => struct CarbonCertificate.Certificate)"
                  },
                  "typeName": {
                    "id": 12,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 9,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "391:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "383:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$8_storage_$",
                      "typeString": "mapping(uint256 => struct CarbonCertificate.Certificate)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 11,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 10,
                        "name": "Certificate",
                        "nameLocations": [
                          "402:11:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 8,
                        "src": "402:11:0"
                      },
                      "referencedDeclaration": 8,
                      "src": "402:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Certificate_$8_storage_ptr",
                        "typeString": "struct CarbonCertificate.Certificate"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 18,
                  "mutability": "mutable",
                  "name": "_ownedTokens",
                  "nameLocation": "534:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "496:50:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                    "typeString": "mapping(address => uint256[])"
                  },
                  "typeName": {
                    "id": 17,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 14,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "504:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "496:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                      "typeString": "mapping(address => uint256[])"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "baseType": {
                        "id": 15,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "515:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 16,
                      "nodeType": "ArrayTypeName",
                      "src": "515:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "_exists",
                  "nameLocation": "628:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "595:40:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                    "typeString": "mapping(uint256 => bool)"
                  },
                  "typeName": {
                    "id": 21,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 19,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "603:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "595:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                      "typeString": "mapping(uint256 => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 20,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "614:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 24,
                  "mutability": "mutable",
                  "name": "_tokenIds",
                  "nameLocation": "701:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "685:25:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "685:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "eventSelector": "70e9dd7b2d7680ff10a6b1f6b97fe2e9888eb3098a9e2ee66104994c8c751adc",
                  "id": 34,
                  "name": "CertificateIssued",
                  "nameLocation": "773:17:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 33,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 26,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "816:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 34,
                        "src": "800:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 25,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "800:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 28,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "849:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 34,
                        "src": "833:25:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 27,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "833:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 30,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "carbonAmount",
                        "nameLocation": "876:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 34,
                        "src": "868:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 29,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "868:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 32,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "projectId",
                        "nameLocation": "905:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 34,
                        "src": "898:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 31,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "898:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "790:130:0"
                  },
                  "src": "767:154:0"
                },
                {
                  "body": {
                    "id": 37,
                    "nodeType": "Block",
                    "src": "987:2:0",
                    "statements": []
                  },
                  "id": 38,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 35,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "984:2:0"
                  },
                  "returnParameters": {
                    "id": 36,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "987:0:0"
                  },
                  "scope": 164,
                  "src": "973:16:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 127,
                    "nodeType": "Block",
                    "src": "1439:876:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 54,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 52,
                                "name": "carbonAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43,
                                "src": "1457:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 53,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1472:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1457:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436172626f6e20616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
                              "id": 55,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1475:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c7bd12b6ca9764613e433a49730df29f16f8a0d40f3a7f3f84d2e594edcf250d",
                                "typeString": "literal_string \"Carbon amount must be greater than zero\""
                              },
                              "value": "Carbon amount must be greater than zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c7bd12b6ca9764613e433a49730df29f16f8a0d40f3a7f3f84d2e594edcf250d",
                                "typeString": "literal_string \"Carbon amount must be greater than zero\""
                              }
                            ],
                            "id": 51,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1449:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 56,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1449:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 57,
                        "nodeType": "ExpressionStatement",
                        "src": "1449:68:0"
                      },
                      {
                        "assignments": [
                          62
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 62,
                            "mutability": "mutable",
                            "name": "newTokenIds",
                            "nameLocation": "1545:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 127,
                            "src": "1528:28:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 60,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1528:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 61,
                              "nodeType": "ArrayTypeName",
                              "src": "1528:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 68,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 66,
                              "name": "carbonAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "1573:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 65,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1559:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 63,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1563:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 64,
                              "nodeType": "ArrayTypeName",
                              "src": "1563:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 67,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1559:27:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1528:58:0"
                      },
                      {
                        "body": {
                          "id": 123,
                          "nodeType": "Block",
                          "src": "1640:640:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 80,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "1654:11:0",
                                "subExpression": {
                                  "id": 79,
                                  "name": "_tokenIds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24,
                                  "src": "1654:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 81,
                              "nodeType": "ExpressionStatement",
                              "src": "1654:11:0"
                            },
                            {
                              "assignments": [
                                83
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 83,
                                  "mutability": "mutable",
                                  "name": "newTokenId",
                                  "nameLocation": "1687:10:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 123,
                                  "src": "1679:18:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 82,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1679:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 85,
                              "initialValue": {
                                "id": 84,
                                "name": "_tokenIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24,
                                "src": "1700:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1679:30:0"
                            },
                            {
                              "expression": {
                                "id": 95,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 86,
                                    "name": "_certificates",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13,
                                    "src": "1769:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$8_storage_$",
                                      "typeString": "mapping(uint256 => struct CarbonCertificate.Certificate storage ref)"
                                    }
                                  },
                                  "id": 88,
                                  "indexExpression": {
                                    "id": 87,
                                    "name": "newTokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 83,
                                    "src": "1783:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1769:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Certificate_$8_storage",
                                    "typeString": "struct CarbonCertificate.Certificate storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "hexValue": "31",
                                      "id": 90,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1841:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    {
                                      "id": 91,
                                      "name": "projectId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 45,
                                      "src": "1900:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 92,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -4,
                                        "src": "1938:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 93,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "1944:9:0",
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "src": "1938:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 89,
                                    "name": "Certificate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8,
                                    "src": "1797:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_struct$_Certificate_$8_storage_ptr_$",
                                      "typeString": "type(struct CarbonCertificate.Certificate storage pointer)"
                                    }
                                  },
                                  "id": 94,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "structConstructorCall",
                                  "lValueRequested": false,
                                  "nameLocations": [
                                    "1827:12:0",
                                    "1889:9:0",
                                    "1927:9:0"
                                  ],
                                  "names": [
                                    "carbonAmount",
                                    "projectId",
                                    "issueDate"
                                  ],
                                  "nodeType": "FunctionCall",
                                  "src": "1797:171:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Certificate_$8_memory_ptr",
                                    "typeString": "struct CarbonCertificate.Certificate memory"
                                  }
                                },
                                "src": "1769:199:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Certificate_$8_storage",
                                  "typeString": "struct CarbonCertificate.Certificate storage ref"
                                }
                              },
                              "id": 96,
                              "nodeType": "ExpressionStatement",
                              "src": "1769:199:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 101,
                                    "name": "newTokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 83,
                                    "src": "2053:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "baseExpression": {
                                      "id": 97,
                                      "name": "_ownedTokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 18,
                                      "src": "2024:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                                        "typeString": "mapping(address => uint256[] storage ref)"
                                      }
                                    },
                                    "id": 99,
                                    "indexExpression": {
                                      "id": 98,
                                      "name": "recipient",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41,
                                      "src": "2037:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2024:23:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 100,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2048:4:0",
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "2024:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                                    "typeString": "function (uint256[] storage pointer,uint256)"
                                  }
                                },
                                "id": 102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2024:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 103,
                              "nodeType": "ExpressionStatement",
                              "src": "2024:40:0"
                            },
                            {
                              "expression": {
                                "id": 108,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 104,
                                    "name": "_exists",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22,
                                    "src": "2078:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                      "typeString": "mapping(uint256 => bool)"
                                    }
                                  },
                                  "id": 106,
                                  "indexExpression": {
                                    "id": 105,
                                    "name": "newTokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 83,
                                    "src": "2086:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2078:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 107,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2100:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "2078:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 109,
                              "nodeType": "ExpressionStatement",
                              "src": "2078:26:0"
                            },
                            {
                              "expression": {
                                "id": 114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 110,
                                    "name": "newTokenIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62,
                                    "src": "2119:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 112,
                                  "indexExpression": {
                                    "id": 111,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 70,
                                    "src": "2131:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2119:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 113,
                                  "name": "newTokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 83,
                                  "src": "2136:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2119:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 115,
                              "nodeType": "ExpressionStatement",
                              "src": "2119:27:0"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 117,
                                    "name": "newTokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 83,
                                    "src": "2233:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 118,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 41,
                                    "src": "2245:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "hexValue": "31",
                                    "id": 119,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2256:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  {
                                    "id": 120,
                                    "name": "projectId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45,
                                    "src": "2259:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 116,
                                  "name": "CertificateIssued",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34,
                                  "src": "2215:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,address,uint256,string memory)"
                                  }
                                },
                                "id": 121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2215:54:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 122,
                              "nodeType": "EmitStatement",
                              "src": "2210:59:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 73,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "1617:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 74,
                            "name": "carbonAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "1621:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1617:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 124,
                        "initializationExpression": {
                          "assignments": [
                            70
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 70,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "1610:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 124,
                              "src": "1602:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 69,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1602:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 72,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 71,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1614:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1602:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 77,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "1635:3:0",
                            "subExpression": {
                              "id": 76,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70,
                              "src": "1635:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 78,
                          "nodeType": "ExpressionStatement",
                          "src": "1635:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "1597:683:0"
                      },
                      {
                        "expression": {
                          "id": 125,
                          "name": "newTokenIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 62,
                          "src": "2297:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "functionReturnParameters": 50,
                        "id": 126,
                        "nodeType": "Return",
                        "src": "2290:18:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 39,
                    "nodeType": "StructuredDocumentation",
                    "src": "995:281:0",
                    "text": " @notice Issues a carbon certificate (one per token)\n @param recipient Address of the certificate recipient\n @param carbonAmount The number of tons of carbon to issue\n @param projectId The project identifier\n @return Array of new token IDs"
                  },
                  "functionSelector": "0ce51f56",
                  "id": 128,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "issueCertificate",
                  "nameLocation": "1290:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 46,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 41,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "1324:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "1316:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 40,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1316:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 43,
                        "mutability": "mutable",
                        "name": "carbonAmount",
                        "nameLocation": "1351:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "1343:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 42,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1343:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 45,
                        "mutability": "mutable",
                        "name": "projectId",
                        "nameLocation": "1387:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "1373:23:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 44,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1373:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1306:96:0"
                  },
                  "returnParameters": {
                    "id": 50,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 49,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "1421:16:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 47,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1421:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 48,
                          "nodeType": "ArrayTypeName",
                          "src": "1421:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1420:18:0"
                  },
                  "scope": 164,
                  "src": "1281:1034:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 148,
                    "nodeType": "Block",
                    "src": "2598:105:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 138,
                                "name": "_exists",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22,
                                "src": "2616:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                  "typeString": "mapping(uint256 => bool)"
                                }
                              },
                              "id": 140,
                              "indexExpression": {
                                "id": 139,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 131,
                                "src": "2624:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2616:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e20646f6573206e6f74206578697374",
                              "id": 141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2634:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726",
                                "typeString": "literal_string \"Token does not exist\""
                              },
                              "value": "Token does not exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726",
                                "typeString": "literal_string \"Token does not exist\""
                              }
                            ],
                            "id": 137,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2608:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2608:49:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 143,
                        "nodeType": "ExpressionStatement",
                        "src": "2608:49:0"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 144,
                            "name": "_certificates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "2674:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Certificate_$8_storage_$",
                              "typeString": "mapping(uint256 => struct CarbonCertificate.Certificate storage ref)"
                            }
                          },
                          "id": 146,
                          "indexExpression": {
                            "id": 145,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 131,
                            "src": "2688:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2674:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Certificate_$8_storage",
                            "typeString": "struct CarbonCertificate.Certificate storage ref"
                          }
                        },
                        "functionReturnParameters": 136,
                        "id": 147,
                        "nodeType": "Return",
                        "src": "2667:29:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 129,
                    "nodeType": "StructuredDocumentation",
                    "src": "2321:188:0",
                    "text": " @notice Fetches the certificate data associated with a given tokenId\n @param tokenId The ID of the token to query\n @return The certificate data for the token"
                  },
                  "functionSelector": "51640fee",
                  "id": 149,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCertificate",
                  "nameLocation": "2523:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 132,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 131,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2546:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 149,
                        "src": "2538:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2538:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2537:17:0"
                  },
                  "returnParameters": {
                    "id": 136,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 135,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 149,
                        "src": "2578:18:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Certificate_$8_memory_ptr",
                          "typeString": "struct CarbonCertificate.Certificate"
                        },
                        "typeName": {
                          "id": 134,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 133,
                            "name": "Certificate",
                            "nameLocations": [
                              "2578:11:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 8,
                            "src": "2578:11:0"
                          },
                          "referencedDeclaration": 8,
                          "src": "2578:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Certificate_$8_storage_ptr",
                            "typeString": "struct CarbonCertificate.Certificate"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2577:20:0"
                  },
                  "scope": 164,
                  "src": "2514:189:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 162,
                    "nodeType": "Block",
                    "src": "2971:43:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 158,
                            "name": "_ownedTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "2988:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                              "typeString": "mapping(address => uint256[] storage ref)"
                            }
                          },
                          "id": 160,
                          "indexExpression": {
                            "id": 159,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 152,
                            "src": "3001:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2988:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "functionReturnParameters": 157,
                        "id": 161,
                        "nodeType": "Return",
                        "src": "2981:26:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 150,
                    "nodeType": "StructuredDocumentation",
                    "src": "2709:177:0",
                    "text": " @notice Gets the list of token IDs owned by a given address\n @param owner The address to query\n @return An array of token IDs owned by the address"
                  },
                  "functionSelector": "d9d61655",
                  "id": 163,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getOwnedTokens",
                  "nameLocation": "2900:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 153,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 152,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2923:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 163,
                        "src": "2915:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 151,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2915:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2914:15:0"
                  },
                  "returnParameters": {
                    "id": 157,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 156,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 163,
                        "src": "2953:16:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 154,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2953:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 155,
                          "nodeType": "ArrayTypeName",
                          "src": "2953:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2952:18:0"
                  },
                  "scope": 164,
                  "src": "2891:123:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 165,
              "src": "57:2959:0",
              "usedErrors": [],
              "usedEvents": [
                34
              ]
            }
          ],
          "src": "32:2985:0"
        },
        "id": 0
      }
    },
    "contracts": {
      "contracts/Contract.sol": {
        "CarbonCertificate": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "carbonAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "projectId",
                  "type": "string"
                }
              ],
              "name": "CertificateIssued",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getCertificate",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "carbonAmount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "string",
                      "name": "projectId",
                      "type": "string"
                    },
                    {
                      "internalType": "uint256",
                      "name": "issueDate",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct CarbonCertificate.Certificate",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "getOwnedTokens",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "carbonAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "projectId",
                  "type": "string"
                }
              ],
              "name": "issueCertificate",
              "outputs": [
                {
                  "internalType": "uint256[]",
                  "name": "",
                  "type": "uint256[]"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608080604052346100165761075d908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80630ce51f561461025157806351640fee146100c95763d9d616551461003d57600080fd5b346100c4576020806003193601126100c4576001600160a01b0361005f6105e1565b166000526001808252604060002091604051918282855491828152019460005282600020926000905b8282106100af576100ab8661009f818a0382610613565b60405191829182610635565b0390f35b84548752958601959383019390830190610088565b600080fd5b346100c4576020806003193601126100c4576004356000604080516100ed816105f7565b8281526060858201520152806000526002825260ff604060002054161561020c576000526000815260406000208160405191610128836105f7565b80548352600180820190604051938492600092815491610147836106ed565b808752928281169081156101eb57506001146101af575b50505050916101746002926101a4940385610613565b85850193845201549160408401928352604051948594818652519085015251606060408501526080840190610670565b905160608301520390f35b6000908152838120939450925b8284106101d55750505082010185826101a4600261015e565b80548885018601528795509284019281016101bc565b60ff191687860152505050151560051b830101905085826101a4600261015e565b60405162461bcd60e51b815260048101839052601460248201527f546f6b656e20646f6573206e6f742065786973740000000000000000000000006044820152606490fd5b346100c45760603660031901126100c45761026a6105e1565b60443567ffffffffffffffff81116100c457366023820112156100c45780600401359067ffffffffffffffff82116104b1576102b1601f8301601f19166020016080610613565b8160805236602483830101116100c457600091602091819060240160a03760800101526024351561058c576102e76024356106b0565b906102f56040519283610613565b6024358252601f196103086024356106b0565b0136602084013760005b602435811061032957604051806100ab8582610635565b6103346003546106c8565b9081600355604051610345816105f7565b60018152602081019060808252426040820152836000526000602052604060002091815183555180519067ffffffffffffffff82116104b15761038b60018501546106ed565b601f8111610545575b50602090601f83116001146104d2576040939291600091836104c7575b50508160011b916000199060031b1c19161760018401555b01516002809201556001600160a01b038416600052600160205260406000208054680100000000000000008110156104b1576001810180835581101561049b57849160005260206000200155826000526020526040600020600160ff19825416179055835181101561049b57816104969260208360051b870101526040519060018252604060208301527f70e9dd7b2d7680ff10a6b1f6b97fe2e9888eb3098a9e2ee66104994c8c751adc6001600160a01b038616928061048e604082016080610670565b0390a36106c8565b610312565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b0151905089806103b1565b906001850160005260206000209160005b601f198516811061052d575091839160019360409695601f19811610610514575b505050811b0160018401556103c9565b015160001960f88460031b161c19169055898080610504565b818301518455600190930192602092830192016104e3565b600185016000526020600020601f840160051c810160208510610585575b601f830160051c82018110610579575050610394565b60008155600101610563565b5080610563565b60405162461bcd60e51b815260206004820152602760248201527f436172626f6e20616d6f756e74206d7573742062652067726561746572207468604482015266616e207a65726f60c81b6064820152608490fd5b600435906001600160a01b03821682036100c457565b6060810190811067ffffffffffffffff8211176104b157604052565b90601f8019910116810190811067ffffffffffffffff8211176104b157604052565b6020908160408183019282815285518094520193019160005b82811061065c575050505090565b83518552938101939281019260010161064e565b919082519283825260005b84811061069c575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161067b565b67ffffffffffffffff81116104b15760051b60200190565b60001981146106d75760010190565b634e487b7160e01b600052601160045260246000fd5b90600182811c9216801561071d575b602083101461070757565b634e487b7160e01b600052602260045260246000fd5b91607f16916106fc56fea2646970667358221220edf9047dffcfad5331eb14e4e5321aa5122bb04b56bb3b26d18ca85dc6c4645764736f6c63430008140033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x75D SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCE51F56 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x51640FEE EQ PUSH2 0xC9 JUMPI PUSH4 0xD9D61655 EQ PUSH2 0x3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xC4 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xC4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x5F PUSH2 0x5E1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x40 MLOAD SWAP2 DUP3 DUP3 DUP6 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP5 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xAF JUMPI PUSH2 0xAB DUP7 PUSH2 0x9F DUP2 DUP11 SUB DUP3 PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x635 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP5 SLOAD DUP8 MSTORE SWAP6 DUP7 ADD SWAP6 SWAP4 DUP4 ADD SWAP4 SWAP1 DUP4 ADD SWAP1 PUSH2 0x88 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xC4 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xC4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 PUSH1 0x40 DUP1 MLOAD PUSH2 0xED DUP2 PUSH2 0x5F7 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x60 DUP6 DUP3 ADD MSTORE ADD MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x128 DUP4 PUSH2 0x5F7 JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SWAP1 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH1 0x0 SWAP3 DUP2 SLOAD SWAP2 PUSH2 0x147 DUP4 PUSH2 0x6ED JUMP JUMPDEST DUP1 DUP8 MSTORE SWAP3 DUP3 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1EB JUMPI POP PUSH1 0x1 EQ PUSH2 0x1AF JUMPI JUMPDEST POP POP POP POP SWAP2 PUSH2 0x174 PUSH1 0x2 SWAP3 PUSH2 0x1A4 SWAP5 SUB DUP6 PUSH2 0x613 JUMP JUMPDEST DUP6 DUP6 ADD SWAP4 DUP5 MSTORE ADD SLOAD SWAP2 PUSH1 0x40 DUP5 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP2 DUP7 MSTORE MLOAD SWAP1 DUP6 ADD MSTORE MLOAD PUSH1 0x60 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x670 JUMP JUMPDEST SWAP1 MLOAD PUSH1 0x60 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE DUP4 DUP2 KECCAK256 SWAP4 SWAP5 POP SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x1D5 JUMPI POP POP POP DUP3 ADD ADD DUP6 DUP3 PUSH2 0x1A4 PUSH1 0x2 PUSH2 0x15E JUMP JUMPDEST DUP1 SLOAD DUP9 DUP6 ADD DUP7 ADD MSTORE DUP8 SWAP6 POP SWAP3 DUP5 ADD SWAP3 DUP2 ADD PUSH2 0x1BC JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP1 POP DUP6 DUP3 PUSH2 0x1A4 PUSH1 0x2 PUSH2 0x15E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20646F6573206E6F74206578697374000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xC4 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC4 JUMPI PUSH2 0x26A PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC4 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xC4 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x4B1 JUMPI PUSH2 0x2B1 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH1 0x80 PUSH2 0x613 JUMP JUMPDEST DUP2 PUSH1 0x80 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0xC4 JUMPI PUSH1 0x0 SWAP2 PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x24 ADD PUSH1 0xA0 CALLDATACOPY PUSH1 0x80 ADD ADD MSTORE PUSH1 0x24 CALLDATALOAD ISZERO PUSH2 0x58C JUMPI PUSH2 0x2E7 PUSH1 0x24 CALLDATALOAD PUSH2 0x6B0 JUMP JUMPDEST SWAP1 PUSH2 0x2F5 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x613 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x308 PUSH1 0x24 CALLDATALOAD PUSH2 0x6B0 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST PUSH1 0x24 CALLDATALOAD DUP2 LT PUSH2 0x329 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0xAB DUP6 DUP3 PUSH2 0x635 JUMP JUMPDEST PUSH2 0x334 PUSH1 0x3 SLOAD PUSH2 0x6C8 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD PUSH2 0x345 DUP2 PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 PUSH1 0x80 DUP3 MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP2 MLOAD DUP4 SSTORE MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x4B1 JUMPI PUSH2 0x38B PUSH1 0x1 DUP6 ADD SLOAD PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x545 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x4D2 JUMPI PUSH1 0x40 SWAP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x4C7 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP5 ADD SSTORE JUMPDEST ADD MLOAD PUSH1 0x2 DUP1 SWAP3 ADD SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x4B1 JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP4 SSTORE DUP2 LT ISZERO PUSH2 0x49B JUMPI DUP5 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x49B JUMPI DUP2 PUSH2 0x496 SWAP3 PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP8 ADD ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x70E9DD7B2D7680FF10A6B1F6B97FE2E9888EB3098A9E2EE66104994C8C751ADC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP3 DUP1 PUSH2 0x48E PUSH1 0x40 DUP3 ADD PUSH1 0x80 PUSH2 0x670 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0x6C8 JUMP JUMPDEST PUSH2 0x312 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x3B1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x52D JUMPI POP SWAP2 DUP4 SWAP2 PUSH1 0x1 SWAP4 PUSH1 0x40 SWAP7 SWAP6 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x514 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP5 ADD SSTORE PUSH2 0x3C9 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0x504 JUMP JUMPDEST DUP2 DUP4 ADD MLOAD DUP5 SSTORE PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x585 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x579 JUMPI POP POP PUSH2 0x394 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x563 JUMP JUMPDEST POP DUP1 PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436172626F6E20616D6F756E74206D7573742062652067726561746572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616E207A65726F PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xC4 JUMPI JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4B1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4B1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x65C JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x64E JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x69C JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x67B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x4B1 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x6D7 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x71D JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x707 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x6FC JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xF9 DIV PUSH30 0xFFCFAD5331EB14E4E5321AA5122BB04B56BB3B26D18CA85DC6C464576473 PUSH16 0x6C634300081400330000000000000000 ",
              "sourceMap": "57:2959:0:-:0;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 1505,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_array_uint256_dyn": {
                  "entryPoint": 1589,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 1648,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_allocation_size_array_uint256_dyn": {
                  "entryPoint": 1712,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_byte_array_length": {
                  "entryPoint": 1773,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 1555,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_6545": {
                  "entryPoint": 1527,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "increment_uint256": {
                  "entryPoint": 1736,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b60003560e01c80630ce51f561461025157806351640fee146100c95763d9d616551461003d57600080fd5b346100c4576020806003193601126100c4576001600160a01b0361005f6105e1565b166000526001808252604060002091604051918282855491828152019460005282600020926000905b8282106100af576100ab8661009f818a0382610613565b60405191829182610635565b0390f35b84548752958601959383019390830190610088565b600080fd5b346100c4576020806003193601126100c4576004356000604080516100ed816105f7565b8281526060858201520152806000526002825260ff604060002054161561020c576000526000815260406000208160405191610128836105f7565b80548352600180820190604051938492600092815491610147836106ed565b808752928281169081156101eb57506001146101af575b50505050916101746002926101a4940385610613565b85850193845201549160408401928352604051948594818652519085015251606060408501526080840190610670565b905160608301520390f35b6000908152838120939450925b8284106101d55750505082010185826101a4600261015e565b80548885018601528795509284019281016101bc565b60ff191687860152505050151560051b830101905085826101a4600261015e565b60405162461bcd60e51b815260048101839052601460248201527f546f6b656e20646f6573206e6f742065786973740000000000000000000000006044820152606490fd5b346100c45760603660031901126100c45761026a6105e1565b60443567ffffffffffffffff81116100c457366023820112156100c45780600401359067ffffffffffffffff82116104b1576102b1601f8301601f19166020016080610613565b8160805236602483830101116100c457600091602091819060240160a03760800101526024351561058c576102e76024356106b0565b906102f56040519283610613565b6024358252601f196103086024356106b0565b0136602084013760005b602435811061032957604051806100ab8582610635565b6103346003546106c8565b9081600355604051610345816105f7565b60018152602081019060808252426040820152836000526000602052604060002091815183555180519067ffffffffffffffff82116104b15761038b60018501546106ed565b601f8111610545575b50602090601f83116001146104d2576040939291600091836104c7575b50508160011b916000199060031b1c19161760018401555b01516002809201556001600160a01b038416600052600160205260406000208054680100000000000000008110156104b1576001810180835581101561049b57849160005260206000200155826000526020526040600020600160ff19825416179055835181101561049b57816104969260208360051b870101526040519060018252604060208301527f70e9dd7b2d7680ff10a6b1f6b97fe2e9888eb3098a9e2ee66104994c8c751adc6001600160a01b038616928061048e604082016080610670565b0390a36106c8565b610312565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b0151905089806103b1565b906001850160005260206000209160005b601f198516811061052d575091839160019360409695601f19811610610514575b505050811b0160018401556103c9565b015160001960f88460031b161c19169055898080610504565b818301518455600190930192602092830192016104e3565b600185016000526020600020601f840160051c810160208510610585575b601f830160051c82018110610579575050610394565b60008155600101610563565b5080610563565b60405162461bcd60e51b815260206004820152602760248201527f436172626f6e20616d6f756e74206d7573742062652067726561746572207468604482015266616e207a65726f60c81b6064820152608490fd5b600435906001600160a01b03821682036100c457565b6060810190811067ffffffffffffffff8211176104b157604052565b90601f8019910116810190811067ffffffffffffffff8211176104b157604052565b6020908160408183019282815285518094520193019160005b82811061065c575050505090565b83518552938101939281019260010161064e565b919082519283825260005b84811061069c575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161067b565b67ffffffffffffffff81116104b15760051b60200190565b60001981146106d75760010190565b634e487b7160e01b600052601160045260246000fd5b90600182811c9216801561071d575b602083101461070757565b634e487b7160e01b600052602260045260246000fd5b91607f16916106fc56fea2646970667358221220edf9047dffcfad5331eb14e4e5321aa5122bb04b56bb3b26d18ca85dc6c4645764736f6c63430008140033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCE51F56 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x51640FEE EQ PUSH2 0xC9 JUMPI PUSH4 0xD9D61655 EQ PUSH2 0x3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xC4 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xC4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x5F PUSH2 0x5E1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 DUP1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x40 MLOAD SWAP2 DUP3 DUP3 DUP6 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP5 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xAF JUMPI PUSH2 0xAB DUP7 PUSH2 0x9F DUP2 DUP11 SUB DUP3 PUSH2 0x613 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x635 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP5 SLOAD DUP8 MSTORE SWAP6 DUP7 ADD SWAP6 SWAP4 DUP4 ADD SWAP4 SWAP1 DUP4 ADD SWAP1 PUSH2 0x88 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xC4 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xC4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 PUSH1 0x40 DUP1 MLOAD PUSH2 0xED DUP2 PUSH2 0x5F7 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x60 DUP6 DUP3 ADD MSTORE ADD MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x128 DUP4 PUSH2 0x5F7 JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP1 DUP3 ADD SWAP1 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH1 0x0 SWAP3 DUP2 SLOAD SWAP2 PUSH2 0x147 DUP4 PUSH2 0x6ED JUMP JUMPDEST DUP1 DUP8 MSTORE SWAP3 DUP3 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1EB JUMPI POP PUSH1 0x1 EQ PUSH2 0x1AF JUMPI JUMPDEST POP POP POP POP SWAP2 PUSH2 0x174 PUSH1 0x2 SWAP3 PUSH2 0x1A4 SWAP5 SUB DUP6 PUSH2 0x613 JUMP JUMPDEST DUP6 DUP6 ADD SWAP4 DUP5 MSTORE ADD SLOAD SWAP2 PUSH1 0x40 DUP5 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 DUP2 DUP7 MSTORE MLOAD SWAP1 DUP6 ADD MSTORE MLOAD PUSH1 0x60 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x670 JUMP JUMPDEST SWAP1 MLOAD PUSH1 0x60 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE DUP4 DUP2 KECCAK256 SWAP4 SWAP5 POP SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x1D5 JUMPI POP POP POP DUP3 ADD ADD DUP6 DUP3 PUSH2 0x1A4 PUSH1 0x2 PUSH2 0x15E JUMP JUMPDEST DUP1 SLOAD DUP9 DUP6 ADD DUP7 ADD MSTORE DUP8 SWAP6 POP SWAP3 DUP5 ADD SWAP3 DUP2 ADD PUSH2 0x1BC JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP1 POP DUP6 DUP3 PUSH2 0x1A4 PUSH1 0x2 PUSH2 0x15E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20646F6573206E6F74206578697374000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xC4 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC4 JUMPI PUSH2 0x26A PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xC4 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xC4 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x4B1 JUMPI PUSH2 0x2B1 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH1 0x80 PUSH2 0x613 JUMP JUMPDEST DUP2 PUSH1 0x80 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0xC4 JUMPI PUSH1 0x0 SWAP2 PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x24 ADD PUSH1 0xA0 CALLDATACOPY PUSH1 0x80 ADD ADD MSTORE PUSH1 0x24 CALLDATALOAD ISZERO PUSH2 0x58C JUMPI PUSH2 0x2E7 PUSH1 0x24 CALLDATALOAD PUSH2 0x6B0 JUMP JUMPDEST SWAP1 PUSH2 0x2F5 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x613 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x308 PUSH1 0x24 CALLDATALOAD PUSH2 0x6B0 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST PUSH1 0x24 CALLDATALOAD DUP2 LT PUSH2 0x329 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0xAB DUP6 DUP3 PUSH2 0x635 JUMP JUMPDEST PUSH2 0x334 PUSH1 0x3 SLOAD PUSH2 0x6C8 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD PUSH2 0x345 DUP2 PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 PUSH1 0x80 DUP3 MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 DUP2 MLOAD DUP4 SSTORE MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x4B1 JUMPI PUSH2 0x38B PUSH1 0x1 DUP6 ADD SLOAD PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x545 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x4D2 JUMPI PUSH1 0x40 SWAP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x4C7 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP5 ADD SSTORE JUMPDEST ADD MLOAD PUSH1 0x2 DUP1 SWAP3 ADD SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x4B1 JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP4 SSTORE DUP2 LT ISZERO PUSH2 0x49B JUMPI DUP5 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x49B JUMPI DUP2 PUSH2 0x496 SWAP3 PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP8 ADD ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0x70E9DD7B2D7680FF10A6B1F6B97FE2E9888EB3098A9E2EE66104994C8C751ADC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP3 DUP1 PUSH2 0x48E PUSH1 0x40 DUP3 ADD PUSH1 0x80 PUSH2 0x670 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0x6C8 JUMP JUMPDEST PUSH2 0x312 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x3B1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x52D JUMPI POP SWAP2 DUP4 SWAP2 PUSH1 0x1 SWAP4 PUSH1 0x40 SWAP7 SWAP6 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x514 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP5 ADD SSTORE PUSH2 0x3C9 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0x504 JUMP JUMPDEST DUP2 DUP4 ADD MLOAD DUP5 SSTORE PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x585 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x579 JUMPI POP POP PUSH2 0x394 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x563 JUMP JUMPDEST POP DUP1 PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436172626F6E20616D6F756E74206D7573742062652067726561746572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616E207A65726F PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xC4 JUMPI JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4B1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4B1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x65C JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x64E JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x69C JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x67B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x4B1 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x6D7 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x71D JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x707 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x6FC JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xF9 DIV PUSH30 0xFFCFAD5331EB14E4E5321AA5122BB04B56BB3B26D18CA85DC6C464576473 PUSH16 0x6C634300081400330000000000000000 ",
              "sourceMap": "57:2959:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;57:2959:0;;:::i;:::-;;;;2988:12;57:2959;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;2616:7;57:2959;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2616:7;57:2959;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;57:2959:0;;;;;;;-1:-1:-1;;;57:2959:0;;;;;;2616:7;57:2959;;;;;;;;;;;;;-1:-1:-1;57:2959:0;;;;;;;;;-1:-1:-1;;57:2959:0;;;;;-1:-1:-1;;;57:2959:0;;;;;;;;-1:-1:-1;57:2959:0;;;2616:7;57:2959;;;;;-1:-1:-1;;;57:2959:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;57:2959:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;57:2959:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1457:16;57:2959;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;1617:16;57:2959;;1617:16;;;;57:2959;;;;;;;:::i;1635:3::-;1654:11;57:2959;;1654:11;:::i;:::-;57:2959;;;;;;;;;:::i;:::-;;;;;1797:171;;57:2959;;;;1938:15;57:2959;1797:171;;57:2959;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;1635:3;57:2959;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1797:171;57:2959;;;;;;-1:-1:-1;;;;;57:2959:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1635:3;57:2959;;;;;;;;;;;;;;;;;;;;2215:54;-1:-1:-1;;;;;57:2959:0;;;;;;;;;;:::i;:::-;2215:54;;;1635:3;:::i;:::-;1602:13;;57:2959;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;57:2959:0;;;;;;;;;;;;;;;;;-1:-1:-1;;57:2959:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;57:2959:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;57:2959:0;;;;;;;;;;;-1:-1:-1;;;;;57:2959:0;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;57:2959:0;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "getCertificate(uint256)": "51640fee",
              "getOwnedTokens(address)": "d9d61655",
              "issueCertificate(address,uint256,string)": "0ce51f56"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"carbonAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"projectId\",\"type\":\"string\"}],\"name\":\"CertificateIssued\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getCertificate\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"carbonAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"projectId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"issueDate\",\"type\":\"uint256\"}],\"internalType\":\"struct CarbonCertificate.Certificate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getOwnedTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"carbonAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"projectId\",\"type\":\"string\"}],\"name\":\"issueCertificate\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getCertificate(uint256)\":{\"params\":{\"tokenId\":\"The ID of the token to query\"},\"returns\":{\"_0\":\"The certificate data for the token\"}},\"getOwnedTokens(address)\":{\"params\":{\"owner\":\"The address to query\"},\"returns\":{\"_0\":\"An array of token IDs owned by the address\"}},\"issueCertificate(address,uint256,string)\":{\"params\":{\"carbonAmount\":\"The number of tons of carbon to issue\",\"projectId\":\"The project identifier\",\"recipient\":\"Address of the certificate recipient\"},\"returns\":{\"_0\":\"Array of new token IDs\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getCertificate(uint256)\":{\"notice\":\"Fetches the certificate data associated with a given tokenId\"},\"getOwnedTokens(address)\":{\"notice\":\"Gets the list of token IDs owned by a given address\"},\"issueCertificate(address,uint256,string)\":{\"notice\":\"Issues a carbon certificate (one per token)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Contract.sol\":\"CarbonCertificate\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Contract.sol\":{\"keccak256\":\"0xa619082d9766018ec1404355b35b00207938165ddd693ca8a34d9875c3d1ea05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c07b650c73a81e701820ab76fb7fef5f03963a5851a57d285d579003480f1439\",\"dweb:/ipfs/QmbkS7gM5uTQCaHdwUGfxvnHmABYjD5M5ehXMrwUmWrQM7\"]}},\"version\":1}"
        }
      }
    }
  }
}